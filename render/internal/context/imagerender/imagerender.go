//
// Copyright 2020 FoxyUtils ehf. All rights reserved.
//
// This is a commercial product and requires a license to operate.
// A trial license can be obtained at https://unidoc.io
//
// DO NOT EDIT: generated by unitwist Go source code obfuscator.
//
// Use of this source code is governed by the UniDoc End User License Agreement
// terms that can be accessed at https://unidoc.io/eula/

package imagerender ;import (_ag "errors";_ae "fmt";_gf "github.com/unidoc/freetype/raster";_cf "github.com/doraemonkeys/unipdf/v3/common";_gg "github.com/doraemonkeys/unipdf/v3/internal/transform";_cff "github.com/doraemonkeys/unipdf/v3/render/internal/context";_ca "golang.org/x/image/draw";
_ad "golang.org/x/image/font";_fg "golang.org/x/image/math/f64";_d "golang.org/x/image/math/fixed";_ee "image";_g "image/color";_e "image/draw";_f "math";_c "sort";_a "strings";);func NewContextForImage (im _ee .Image )*Context {return NewContextForRGBA (_ecag (im ))};
func (_bba *Context )SetFillRule (fillRule _cff .FillRule ){_bba ._dfb =fillRule };func _acaa (_aaab _gf .Path ,_ffac []float64 ,_aebb float64 )_gf .Path {return _gfb (_fgfa (_aac (_aaab ),_ffac ,_aebb ));};func (_ggc *Context )SetFillStyle (pattern _cff .Pattern ){if _bag ,_cae :=pattern .(*solidPattern );
_cae {_ggc ._caa =_bag ._adb ;};_ggc ._dga =pattern ;};func (_bcd *Context )Identity (){_bcd ._ff =_gg .IdentityMatrix ()};func (_gba *Context )Width ()int {return _gba ._bdb };func (_fge *Context )ClearPath (){_fge ._fbbb .Clear ();_fge ._bfe .Clear ();
_fge ._cda =false };func _cggf (_daeb _g .Color )_cff .Pattern {return &solidPattern {_adb :_daeb }};func _dag (_fbbg ,_aa ,_dfa ,_dg ,_aee ,_eb ,_ade ,_bae float64 )[]_gg .Point {_agc :=(_f .Hypot (_dfa -_fbbg ,_dg -_aa )+_f .Hypot (_aee -_dfa ,_eb -_dg )+_f .Hypot (_ade -_aee ,_bae -_eb ));
_cee :=int (_agc +0.5);if _cee < 4{_cee =4;};_gea :=float64 (_cee )-1;_cffce :=make ([]_gg .Point ,_cee );for _gc :=0;_gc < _cee ;_gc ++{_fbd :=float64 (_gc )/_gea ;_fc ,_aeb :=_gdc (_fbbg ,_aa ,_dfa ,_dg ,_aee ,_eb ,_ade ,_bae ,_fbd );_cffce [_gc ]=_gg .NewPoint (_fc ,_aeb );
};return _cffce ;};type linearGradient struct{_ebfb ,_fged ,_fdega ,_bbd float64 ;_dgcg stops ;};func (_ddef *Context )Stroke (){_ddef .StrokePreserve ();_ddef .ClearPath ()};func (_cdbc *linearGradient )AddColorStop (offset float64 ,color _g .Color ){_cdbc ._dgcg =append (_cdbc ._dgcg ,stop {_fgef :offset ,_gaga :color });
_c .Sort (_cdbc ._dgcg );};func (_fda *Context )setFillAndStrokeColor (_ccf _g .Color ){_fda ._caa =_ccf ;_fda ._dga =_cggf (_ccf );_fda ._dgb =_cggf (_ccf );};func _dd (_gga ,_ggb ,_bb ,_aed ,_fga ,_cd ,_cffc float64 )(_ge ,_fd float64 ){_fb :=1-_cffc ;
_bf :=_fb *_fb ;_bd :=2*_fb *_cffc ;_cdg :=_cffc *_cffc ;_ge =_bf *_gga +_bd *_bb +_cdg *_fga ;_fd =_bf *_ggb +_bd *_aed +_cdg *_cd ;return ;};func (_aeda *Context )Scale (x ,y float64 ){_aeda ._ff =_aeda ._ff .Scale (x ,y )};func (_fab *Context )LineTo (x ,y float64 ){if !_fab ._cda {_fab .MoveTo (x ,y );
}else {x ,y =_fab .Transform (x ,y );_fe :=_gg .NewPoint (x ,y );_dggc :=_afab (_fe );_fab ._fbbb .Add1 (_dggc );_fab ._bfe .Add1 (_dggc );_fab ._cfb =_fe ;};};type stop struct{_fgef float64 ;_gaga _g .Color ;};func (_gbae *Context )Height ()int {return _gbae ._bgc };
func _afgb (_bfdg *_ee .RGBA ,_feb *_ee .Alpha ,_ffeb _cff .Pattern )*patternPainter {return &patternPainter {_bfdg ,_feb ,_ffeb };};type surfacePattern struct{_gbga _ee .Image ;_bbfe repeatOp ;};type radialGradient struct{_eeg ,_fbbd ,_fgb circle ;_abd ,_dbg float64 ;
_dffe float64 ;_fdaa stops ;};func _afab (_ebaf _gg .Point )_d .Point26_6 {return _d .Point26_6 {X :_ggg (_ebaf .X ),Y :_ggg (_ebaf .Y )}};func (_deg *Context )ClipPreserve (){_cdaa :=_ee .NewAlpha (_ee .Rect (0,0,_deg ._bdb ,_deg ._bgc ));_bbcf :=_gf .NewAlphaOverPainter (_cdaa );
_deg .fill (_bbcf );if _deg ._abe ==nil {_deg ._abe =_cdaa ;}else {_adga :=_ee .NewAlpha (_ee .Rect (0,0,_deg ._bdb ,_deg ._bgc ));_ca .DrawMask (_adga ,_adga .Bounds (),_cdaa ,_ee .Point {},_deg ._abe ,_ee .Point {},_ca .Over );_deg ._abe =_adga ;};};
func NewLinearGradient (x0 ,y0 ,x1 ,y1 float64 )_cff .Gradient {_ccc :=&linearGradient {_ebfb :x0 ,_fged :y0 ,_fdega :x1 ,_bbd :y1 };return _ccc ;};func (_bea *Context )DrawLine (x1 ,y1 ,x2 ,y2 float64 ){_bea .MoveTo (x1 ,y1 );_bea .LineTo (x2 ,y2 )};func _cbe (_dddbb string )(_cdad ,_ceg ,_ffffg ,_cbea int ){_dddbb =_a .TrimPrefix (_dddbb ,"\u0023");
_cbea =255;if len (_dddbb )==3{_afa :="\u00251\u0078\u0025\u0031\u0078\u0025\u0031x";_ae .Sscanf (_dddbb ,_afa ,&_cdad ,&_ceg ,&_ffffg );_cdad |=_cdad <<4;_ceg |=_ceg <<4;_ffffg |=_ffffg <<4;};if len (_dddbb )==6{_fgaf :="\u0025\u0030\u0032x\u0025\u0030\u0032\u0078\u0025\u0030\u0032\u0078";
_ae .Sscanf (_dddbb ,_fgaf ,&_cdad ,&_ceg ,&_ffffg );};if len (_dddbb )==8{_beed :="\u0025\u00302\u0078\u0025\u00302\u0078\u0025\u0030\u0032\u0078\u0025\u0030\u0032\u0078";_ae .Sscanf (_dddbb ,_beed ,&_cdad ,&_ceg ,&_ffffg ,&_cbea );};return ;};func (_fff *Context )NewSubPath (){if _fff ._cda {_fff ._bfe .Add1 (_afab (_fff ._ac ));
};_fff ._cda =false ;};func (_eefc *Context )fill (_aba _gf .Painter ){_bbf :=_eefc ._bfe ;if _eefc ._cda {_bbf =make (_gf .Path ,len (_eefc ._bfe ));copy (_bbf ,_eefc ._bfe );_bbf .Add1 (_afab (_eefc ._ac ));};_fac :=_eefc ._dc ;_fac .UseNonZeroWinding =_eefc ._dfb ==_cff .FillRuleWinding ;
_fac .Clear ();_fac .AddPath (_bbf );_fac .Rasterize (_aba );};func (_aecg *linearGradient )ColorAt (x ,y int )_g .Color {if len (_aecg ._dgcg )==0{return _g .Transparent ;};_dge ,_cag :=float64 (x ),float64 (y );_bbdf ,_aeca ,_agd ,_fcff :=_aecg ._ebfb ,_aecg ._fged ,_aecg ._fdega ,_aecg ._bbd ;
_acae ,_dfbc :=_agd -_bbdf ,_fcff -_aeca ;if _dfbc ==0&&_acae !=0{return _fgcd ((_dge -_bbdf )/_acae ,_aecg ._dgcg );};if _acae ==0&&_dfbc !=0{return _fgcd ((_cag -_aeca )/_dfbc ,_aecg ._dgcg );};_cde :=_acae *(_dge -_bbdf )+_dfbc *(_cag -_aeca );if _cde < 0{return _aecg ._dgcg [0]._gaga ;
};_eec :=_f .Hypot (_acae ,_dfbc );_gbe :=((_dge -_bbdf )*-_dfbc +(_cag -_aeca )*_acae )/(_eec *_eec );_fdaf ,_efbd :=_bbdf +_gbe *-_dfbc ,_aeca +_gbe *_acae ;_cec :=_f .Hypot (_dge -_fdaf ,_cag -_efbd )/_eec ;return _fgcd (_cec ,_aecg ._dgcg );};func _gdc (_db ,_dff ,_fdc ,_bc ,_fbe ,_aggb ,_bg ,_ggbb ,_eg float64 )(_fdd ,_abg float64 ){_ce :=1-_eg ;
_gb :=_ce *_ce *_ce ;_abf :=3*_ce *_ce *_eg ;_baa :=3*_ce *_eg *_eg ;_gge :=_eg *_eg *_eg ;_fdd =_gb *_db +_abf *_fdc +_baa *_fbe +_gge *_bg ;_abg =_gb *_dff +_abf *_bc +_baa *_aggb +_gge *_ggbb ;return ;};func (_gbf *Context )MoveTo (x ,y float64 ){if _gbf ._cda {_gbf ._bfe .Add1 (_afab (_gbf ._ac ));
};x ,y =_gbf .Transform (x ,y );_eagf :=_gg .NewPoint (x ,y );_ceef :=_afab (_eagf );_gbf ._fbbb .Start (_ceef );_gbf ._bfe .Start (_ceef );_gbf ._ac =_eagf ;_gbf ._cfb =_eagf ;_gbf ._cda =true ;};func (_dgf *Context )DrawRectangle (x ,y ,w ,h float64 ){_dgf .NewSubPath ();
_dgf .MoveTo (x ,y );_dgf .LineTo (x +w ,y );_dgf .LineTo (x +w ,y +h );_dgf .LineTo (x ,y +h );_dgf .ClosePath ();};func (_gda *Context )SetHexColor (x string ){_dde ,_gbc ,_aec ,_eee :=_cbe (x );_gda .SetRGBA255 (_dde ,_gbc ,_aec ,_eee );};func (_eaf *Context )Push (){_bbgd :=*_eaf ;
_eaf ._fad =append (_eaf ._fad ,&_bbgd )};func (_dddb *Context )Pop (){_bfd :=*_dddb ;_efc :=_dddb ._fad ;_aedg :=_efc [len (_efc )-1];*_dddb =*_aedg ;_dddb ._fbbb =_bfd ._fbbb ;_dddb ._bfe =_bfd ._bfe ;_dddb ._ac =_bfd ._ac ;_dddb ._cfb =_bfd ._cfb ;_dddb ._cda =_bfd ._cda ;
};func (_ffe *Context )capper ()_gf .Capper {switch _ffe ._fddd {case _cff .LineCapButt :return _gf .ButtCapper ;case _cff .LineCapRound :return _gf .RoundCapper ;case _cff .LineCapSquare :return _gf .SquareCapper ;};return nil ;};func (_fgf *Context )SetRGB255 (r ,g ,b int ){_fgf .SetRGBA255 (r ,g ,b ,255)};
func (_ddd *Context )Translate (x ,y float64 ){_ddd ._ff =_ddd ._ff .Translate (x ,y )};func (_fcf *Context )DrawCircle (x ,y ,r float64 ){_fcf .NewSubPath ();_fcf .DrawEllipticalArc (x ,y ,r ,r ,0,2*_f .Pi );_fcf .ClosePath ();};func (_cdgf *Context )joiner ()_gf .Joiner {switch _cdgf ._fde {case _cff .LineJoinBevel :return _gf .BevelJoiner ;
case _cff .LineJoinRound :return _gf .RoundJoiner ;};return nil ;};func (_cbf *Context )ScaleAbout (sx ,sy ,x ,y float64 ){_cbf .Translate (x ,y );_cbf .Scale (sx ,sy );_cbf .Translate (-x ,-y );};func _feac (_gbeb ,_fdg _g .Color ,_acf float64 )_g .Color {_cfgb ,_aeef ,_cfbb ,_cbd :=_gbeb .RGBA ();
_bdf ,_edef ,_ggda ,_ecgf :=_fdg .RGBA ();return _g .RGBA {_dgbc (_cfgb ,_bdf ,_acf ),_dgbc (_aeef ,_edef ,_acf ),_dgbc (_cfbb ,_ggda ,_acf ),_dgbc (_cbd ,_ecgf ,_acf )};};func (_bbgg *Context )Fill (){_bbgg .FillPreserve ();_bbgg .ClearPath ()};func (_dgg *Context )SetStrokeStyle (pattern _cff .Pattern ){_dgg ._dgb =pattern };
func (_gbff *Context )DrawEllipticalArc (x ,y ,rx ,ry ,angle1 ,angle2 float64 ){const _beef =16;for _bfg :=0;_bfg < _beef ;_bfg ++{_bgf :=float64 (_bfg +0)/_beef ;_feg :=float64 (_bfg +1)/_beef ;_fdeg :=angle1 +(angle2 -angle1 )*_bgf ;_gcg :=angle1 +(angle2 -angle1 )*_feg ;
_efb :=x +rx *_f .Cos (_fdeg );_ccd :=y +ry *_f .Sin (_fdeg );_ecg :=x +rx *_f .Cos ((_fdeg +_gcg )/2);_gbg :=y +ry *_f .Sin ((_fdeg +_gcg )/2);_dfg :=x +rx *_f .Cos (_gcg );_bada :=y +ry *_f .Sin (_gcg );_fgg :=2*_ecg -_efb /2-_dfg /2;_acd :=2*_gbg -_ccd /2-_bada /2;
if _bfg ==0{if _gbff ._cda {_gbff .LineTo (_efb ,_ccd );}else {_gbff .MoveTo (_efb ,_ccd );};};_gbff .QuadraticTo (_fgg ,_acd ,_dfg ,_bada );};};func (_afg *Context )ResetClip (){_afg ._abe =nil };func _gfb (_eed [][]_gg .Point )_gf .Path {var _deda _gf .Path ;
for _ ,_egag :=range _eed {var _aeg _d .Point26_6 ;for _edd ,_gbfd :=range _egag {_cbcf :=_afab (_gbfd );if _edd ==0{_deda .Start (_cbcf );}else {_eafb :=_cbcf .X -_aeg .X ;_cgb :=_cbcf .Y -_aeg .Y ;if _eafb < 0{_eafb =-_eafb ;};if _cgb < 0{_cgb =-_cgb ;
};if _eafb +_cgb > 8{_deda .Add1 (_cbcf );};};_aeg =_cbcf ;};};return _deda ;};func (_ga *Context )SetColor (c _g .Color ){_ga .setFillAndStrokeColor (c )};func (_cfdg *Context )SetDashOffset (offset float64 ){_cfdg ._cb =offset };type stops []stop ;func (_agf *Context )Clear (){_cdb :=_ee .NewUniform (_agf ._caa );
_ca .Draw (_agf ._ggbba ,_agf ._ggbba .Bounds (),_cdb ,_ee .Point {},_ca .Src );};func (_fbdd *Context )SetDash (dashes ...float64 ){_fbdd ._fbed =dashes };func (_cdcc *Context )Shear (x ,y float64 ){_cdcc ._ff .Shear (x ,y )};func (_acb *radialGradient )AddColorStop (offset float64 ,color _g .Color ){_acb ._fdaa =append (_acb ._fdaa ,stop {_fgef :offset ,_gaga :color });
_c .Sort (_acb ._fdaa );};func (_aga *Context )LineWidth ()float64 {return _aga ._ef };func (_dbe *Context )SetFillRGBA (r ,g ,b ,a float64 ){_fdcg :=_g .NRGBA {uint8 (r *255),uint8 (g *255),uint8 (b *255),uint8 (a *255)};_dbe ._caa =_fdcg ;_dbe ._dga =_cggf (_fdcg );
};func _eddb (_deeb _ee .Image ,_bcdc repeatOp )_cff .Pattern {return &surfacePattern {_gbga :_deeb ,_bbfe :_bcdc };};func _ccg (_fadd ,_abeb ,_cabd ,_dae ,_abdg ,_ddf float64 )float64 {return _fadd *_dae +_abeb *_abdg +_cabd *_ddf ;};func (_eagg *Context )DrawPoint (x ,y ,r float64 ){_eagg .Push ();
_ebd ,_aeff :=_eagg .Transform (x ,y );_eagg .Identity ();_eagg .DrawCircle (_ebd ,_aeff ,r );_eagg .Pop ();};func (_deea *Context )stroke (_adgd _gf .Painter ){_dgc :=_deea ._fbbb ;if len (_deea ._fbed )> 0{_dgc =_acaa (_dgc ,_deea ._fbed ,_deea ._cb );
}else {_dgc =_gfb (_aac (_dgc ));};_fffd :=_deea ._dc ;_fffd .UseNonZeroWinding =true ;_fffd .Clear ();_adge :=(_deea ._ff .ScalingFactorX ()+_deea ._ff .ScalingFactorY ())/2;_fffd .AddStroke (_dgc ,_ggg (_deea ._ef *_adge ),_deea .capper (),_deea .joiner ());
_fffd .Rasterize (_adgd );};func (_dgfc *Context )drawRegularPolygon (_efd int ,_efdg ,_gff ,_cffe ,_ecd float64 ){_egd :=2*_f .Pi /float64 (_efd );_ecd -=_f .Pi /2;if _efd %2==0{_ecd +=_egd /2;};_dgfc .NewSubPath ();for _fbf :=0;_fbf < _efd ;_fbf ++{_bbcd :=_ecd +_egd *float64 (_fbf );
_dgfc .LineTo (_efdg +_cffe *_f .Cos (_bbcd ),_gff +_cffe *_f .Sin (_bbcd ));};_dgfc .ClosePath ();};func NewContext (width ,height int )*Context {return NewContextForRGBA (_ee .NewRGBA (_ee .Rect (0,0,width ,height )));};func _gee (_ab ,_gd ,_cfg ,_fbb ,_df ,_cdc float64 )[]_gg .Point {_de :=(_f .Hypot (_cfg -_ab ,_fbb -_gd )+_f .Hypot (_df -_cfg ,_cdc -_fbb ));
_ec :=int (_de +0.5);if _ec < 4{_ec =4;};_ba :=float64 (_ec )-1;_dfd :=make ([]_gg .Point ,_ec );for _eef :=0;_eef < _ec ;_eef ++{_dee :=float64 (_eef )/_ba ;_da ,_agg :=_dd (_ab ,_gd ,_cfg ,_fbb ,_df ,_cdc ,_dee );_dfd [_eef ]=_gg .NewPoint (_da ,_agg );
};return _dfd ;};func (_fdeb *Context )DrawRoundedRectangle (x ,y ,w ,h ,r float64 ){_eea ,_bcge ,_efeb ,_ggee :=x ,x +r ,x +w -r ,x +w ;_egf ,_bcb ,_ega ,_agff :=y ,y +r ,y +h -r ,y +h ;_fdeb .NewSubPath ();_fdeb .MoveTo (_bcge ,_egf );_fdeb .LineTo (_efeb ,_egf );
_fdeb .DrawArc (_efeb ,_bcb ,r ,_ccea (270),_ccea (360));_fdeb .LineTo (_ggee ,_ega );_fdeb .DrawArc (_efeb ,_ega ,r ,_ccea (0),_ccea (90));_fdeb .LineTo (_bcge ,_agff );_fdeb .DrawArc (_bcge ,_ega ,r ,_ccea (90),_ccea (180));_fdeb .LineTo (_eea ,_bcb );
_fdeb .DrawArc (_bcge ,_bcb ,r ,_ccea (180),_ccea (270));_fdeb .ClosePath ();};func (_cab *Context )RotateAbout (angle ,x ,y float64 ){_cab .Translate (x ,y );_cab .Rotate (angle );_cab .Translate (-x ,-y );};func (_cac *Context )Rotate (angle float64 ){_cac ._ff =_cac ._ff .Rotate (angle )};
func (_egb *Context )Matrix ()_gg .Matrix {return _egb ._ff };func (_cfa *surfacePattern )ColorAt (x ,y int )_g .Color {_gfa :=_cfa ._gbga .Bounds ();switch _cfa ._bbfe {case _bcgb :if y >=_gfa .Dy (){return _g .Transparent ;};case _aag :if x >=_gfa .Dx (){return _g .Transparent ;
};case _bged :if x >=_gfa .Dx ()||y >=_gfa .Dy (){return _g .Transparent ;};};x =x %_gfa .Dx ()+_gfa .Min .X ;y =y %_gfa .Dy ()+_gfa .Min .Y ;return _cfa ._gbga .At (x ,y );};func (_cc *Context )Image ()_ee .Image {return _cc ._ggbba };func (_cbc *Context )ShearAbout (sx ,sy ,x ,y float64 ){_cbc .Translate (x ,y );
_cbc .Shear (sx ,sy );_cbc .Translate (-x ,-y );};func NewContextForRGBA (im *_ee .RGBA )*Context {_ed :=im .Bounds ().Size ().X ;_cfc :=im .Bounds ().Size ().Y ;return &Context {_bdb :_ed ,_bgc :_cfc ,_dc :_gf .NewRasterizer (_ed ,_cfc ),_ggbba :im ,_caa :_g .Transparent ,_dga :_fa ,_dgb :_cfd ,_ef :1,_dfb :_cff .FillRuleWinding ,_ff :_gg .IdentityMatrix (),_egc :_cff .NewTextState ()};
};func (_caee *Context )DrawImage (im _ee .Image ,x ,y int ){_caee .DrawImageAnchored (im ,x ,y ,0,0)};var (_fa =_cggf (_g .White );_cfd =_cggf (_g .Black ););func NewRadialGradient (x0 ,y0 ,r0 ,x1 ,y1 ,r1 float64 )_cff .Gradient {_dcg :=circle {x0 ,y0 ,r0 };
_fdag :=circle {x1 ,y1 ,r1 };_ece :=circle {x1 -x0 ,y1 -y0 ,r1 -r0 };_egfc :=_ccg (_ece ._fgc ,_ece ._gcb ,-_ece ._gccg ,_ece ._fgc ,_ece ._gcb ,_ece ._gccg );var _cdcd float64 ;if _egfc !=0{_cdcd =1.0/_egfc ;};_bfec :=-_dcg ._gccg ;_aeec :=&radialGradient {_eeg :_dcg ,_fbbd :_fdag ,_fgb :_ece ,_abd :_egfc ,_dbg :_cdcd ,_dffe :_bfec };
return _aeec ;};func _aac (_ecda _gf .Path )[][]_gg .Point {var _ebfg [][]_gg .Point ;var _cbg []_gg .Point ;var _bff ,_eac float64 ;for _bafc :=0;_bafc < len (_ecda );{switch _ecda [_bafc ]{case 0:if len (_cbg )> 0{_ebfg =append (_ebfg ,_cbg );_cbg =nil ;
};_facc :=_fcfd (_ecda [_bafc +1]);_bfdb :=_fcfd (_ecda [_bafc +2]);_cbg =append (_cbg ,_gg .NewPoint (_facc ,_bfdb ));_bff ,_eac =_facc ,_bfdb ;_bafc +=4;case 1:_caf :=_fcfd (_ecda [_bafc +1]);_edg :=_fcfd (_ecda [_bafc +2]);_cbg =append (_cbg ,_gg .NewPoint (_caf ,_edg ));
_bff ,_eac =_caf ,_edg ;_bafc +=4;case 2:_ccgg :=_fcfd (_ecda [_bafc +1]);_fabd :=_fcfd (_ecda [_bafc +2]);_abfa :=_fcfd (_ecda [_bafc +3]);_cagf :=_fcfd (_ecda [_bafc +4]);_ceb :=_gee (_bff ,_eac ,_ccgg ,_fabd ,_abfa ,_cagf );_cbg =append (_cbg ,_ceb ...);
_bff ,_eac =_abfa ,_cagf ;_bafc +=6;case 3:_dec :=_fcfd (_ecda [_bafc +1]);_aacb :=_fcfd (_ecda [_bafc +2]);_fgce :=_fcfd (_ecda [_bafc +3]);_fcae :=_fcfd (_ecda [_bafc +4]);_dfcc :=_fcfd (_ecda [_bafc +5]);_def :=_fcfd (_ecda [_bafc +6]);_ddec :=_dag (_bff ,_eac ,_dec ,_aacb ,_fgce ,_fcae ,_dfcc ,_def );
_cbg =append (_cbg ,_ddec ...);_bff ,_eac =_dfcc ,_def ;_bafc +=8;default:_cf .Log .Debug ("\u0057\u0041\u0052\u004e: \u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0070\u0061\u0074\u0068\u003a\u0020%\u0076",_ecda );return _ebfg ;};};if len (_cbg )> 0{_ebfg =append (_ebfg ,_cbg );
};return _ebfg ;};func (_be *Context )SetLineJoin (lineJoin _cff .LineJoin ){_be ._fde =lineJoin };const (_cea repeatOp =iota ;_bcgb ;_aag ;_bged ;);func (_ddff *patternPainter )Paint (ss []_gf .Span ,done bool ){_fed :=_ddff ._eacg .Bounds ();for _ ,_gbcd :=range ss {if _gbcd .Y < _fed .Min .Y {continue ;
};if _gbcd .Y >=_fed .Max .Y {return ;};if _gbcd .X0 < _fed .Min .X {_gbcd .X0 =_fed .Min .X ;};if _gbcd .X1 > _fed .Max .X {_gbcd .X1 =_fed .Max .X ;};if _gbcd .X0 >=_gbcd .X1 {continue ;};const _egbg =1<<16-1;_bccd :=_gbcd .Y -_ddff ._eacg .Rect .Min .Y ;
_fbbf :=_gbcd .X0 -_ddff ._eacg .Rect .Min .X ;_dgga :=(_gbcd .Y -_ddff ._eacg .Rect .Min .Y )*_ddff ._eacg .Stride +(_gbcd .X0 -_ddff ._eacg .Rect .Min .X )*4;_dddg :=_dgga +(_gbcd .X1 -_gbcd .X0 )*4;for _eba ,_cffcef :=_dgga ,_fbbf ;_eba < _dddg ;_eba ,_cffcef =_eba +4,_cffcef +1{_fgag :=_gbcd .Alpha ;
if _ddff ._gefd !=nil {_fgag =_fgag *uint32 (_ddff ._gefd .AlphaAt (_cffcef ,_bccd ).A )/255;if _fgag ==0{continue ;};};_geb :=_ddff ._fgeg .ColorAt (_cffcef ,_bccd );_ffff ,_dba ,_gcec ,_dfgf :=_geb .RGBA ();_cdec :=uint32 (_ddff ._eacg .Pix [_eba +0]);
_bda :=uint32 (_ddff ._eacg .Pix [_eba +1]);_acg :=uint32 (_ddff ._eacg .Pix [_eba +2]);_bgca :=uint32 (_ddff ._eacg .Pix [_eba +3]);_bbgc :=(_egbg -(_dfgf *_fgag /_egbg ))*0x101;_ddff ._eacg .Pix [_eba +0]=uint8 ((_cdec *_bbgc +_ffff *_fgag )/_egbg >>8);
_ddff ._eacg .Pix [_eba +1]=uint8 ((_bda *_bbgc +_dba *_fgag )/_egbg >>8);_ddff ._eacg .Pix [_eba +2]=uint8 ((_acg *_bbgc +_gcec *_fgag )/_egbg >>8);_ddff ._eacg .Pix [_eba +3]=uint8 ((_bgca *_bbgc +_dfgf *_fgag )/_egbg >>8);};};};func (_bfb *Context )Transform (x ,y float64 )(_dded ,_ggca float64 ){return _bfb ._ff .Transform (x ,y )};
func (_ggd *Context )SetPixel (x ,y int ){_ggd ._ggbba .Set (x ,y ,_ggd ._caa )};func _fgcd (_beb float64 ,_fgbb stops )_g .Color {if _beb <=0.0||len (_fgbb )==1{return _fgbb [0]._gaga ;};_fgff :=_fgbb [len (_fgbb )-1];if _beb >=_fgff ._fgef {return _fgff ._gaga ;
};for _gef ,_gad :=range _fgbb [1:]{if _beb < _gad ._fgef {_beb =(_beb -_fgbb [_gef ]._fgef )/(_gad ._fgef -_fgbb [_gef ]._fgef );return _feac (_fgbb [_gef ]._gaga ,_gad ._gaga ,_beb );};};return _fgff ._gaga ;};func (_afd *Context )DrawImageAnchored (im _ee .Image ,x ,y int ,ax ,ay float64 ){_gbd :=im .Bounds ().Size ();
x -=int (ax *float64 (_gbd .X ));y -=int (ay *float64 (_gbd .Y ));_dagc :=_ca .BiLinear ;_fdde :=_afd ._ff .Clone ().Translate (float64 (x ),float64 (y ));_cbbb :=_fg .Aff3 {_fdde [0],_fdde [3],_fdde [6],_fdde [1],_fdde [4],_fdde [7]};if _afd ._abe ==nil {_dagc .Transform (_afd ._ggbba ,_cbbb ,im ,im .Bounds (),_ca .Over ,nil );
}else {_dagc .Transform (_afd ._ggbba ,_cbbb ,im ,im .Bounds (),_ca .Over ,&_ca .Options {DstMask :_afd ._abe ,DstMaskP :_ee .Point {}});};};type Context struct{_bdb int ;_bgc int ;_dc *_gf .Rasterizer ;_ggbba *_ee .RGBA ;_abe *_ee .Alpha ;_caa _g .Color ;
_dga _cff .Pattern ;_dgb _cff .Pattern ;_fbbb _gf .Path ;_bfe _gf .Path ;_ac _gg .Point ;_cfb _gg .Point ;_cda bool ;_fbed []float64 ;_cb float64 ;_ef float64 ;_fddd _cff .LineCap ;_fde _cff .LineJoin ;_dfb _cff .FillRule ;_ff _gg .Matrix ;_egc _cff .TextState ;
_fad []*Context ;};func _dgbc (_cbdf ,_cge uint32 ,_ccad float64 )uint8 {return uint8 (int32 (float64 (_cbdf )*(1.0-_ccad )+float64 (_cge )*_ccad )>>8);};func (_ccb *Context )DrawStringAnchored (s string ,face _ad .Face ,x ,y ,ax ,ay float64 ){_gddc ,_gfc :=_ccb .MeasureString (s ,face );
_ccb .drawString (s ,face ,x -ax *_gddc ,y +ay *_gfc );};func (_bed stops )Len ()int {return len (_bed )};func (_eag *Context )SetRGBA255 (r ,g ,b ,a int ){_eag ._caa =_g .NRGBA {uint8 (r ),uint8 (g ),uint8 (b ),uint8 (a )};_eag .setFillAndStrokeColor (_eag ._caa );
};type repeatOp int ;type solidPattern struct{_adb _g .Color };func _fcfd (_fgge _d .Int26_6 )float64 {const _baaf ,_efef =6,1<<6-1;if _fgge >=0{return float64 (_fgge >>_baaf )+float64 (_fgge &_efef )/64;};_fgge =-_fgge ;if _fgge >=0{return -(float64 (_fgge >>_baaf )+float64 (_fgge &_efef )/64);
};return 0;};func (_af *Context )SetStrokeRGBA (r ,g ,b ,a float64 ){_ea :=_g .NRGBA {uint8 (r *255),uint8 (g *255),uint8 (b *255),uint8 (a *255)};_af ._dgb =_cggf (_ea );};func (_gcf *solidPattern )ColorAt (x ,y int )_g .Color {return _gcf ._adb };func (_eca *Context )CubicTo (x1 ,y1 ,x2 ,y2 ,x3 ,y3 float64 ){if !_eca ._cda {_eca .MoveTo (x1 ,y1 );
};_fce ,_fbgb :=_eca ._cfb .X ,_eca ._cfb .Y ;x1 ,y1 =_eca .Transform (x1 ,y1 );x2 ,y2 =_eca .Transform (x2 ,y2 );x3 ,y3 =_eca .Transform (x3 ,y3 );_ege :=_dag (_fce ,_fbgb ,x1 ,y1 ,x2 ,y2 ,x3 ,y3 );_bee :=_afab (_eca ._cfb );for _ ,_bbaa :=range _ege [1:]{_abed :=_afab (_bbaa );
if _abed ==_bee {continue ;};_bee =_abed ;_eca ._fbbb .Add1 (_abed );_eca ._bfe .Add1 (_abed );_eca ._cfb =_bbaa ;};};func (_dfc *Context )ClosePath (){if _dfc ._cda {_gce :=_afab (_dfc ._ac );_dfc ._fbbb .Add1 (_gce );_dfc ._bfe .Add1 (_gce );_dfc ._cfb =_dfc ._ac ;
};};func (_baf *Context )MeasureString (s string ,face _ad .Face )(_abaa ,_bca float64 ){_gdg :=&_ad .Drawer {Face :face };_gdgd :=_gdg .MeasureString (s );return float64 (_gdgd >>6),_baf ._egc .Tf .Size ;};func (_cca *radialGradient )ColorAt (x ,y int )_g .Color {if len (_cca ._fdaa )==0{return _g .Transparent ;
};_dbeg ,_cce :=float64 (x )+0.5-_cca ._eeg ._fgc ,float64 (y )+0.5-_cca ._eeg ._gcb ;_bbfa :=_ccg (_dbeg ,_cce ,_cca ._eeg ._gccg ,_cca ._fgb ._fgc ,_cca ._fgb ._gcb ,_cca ._fgb ._gccg );_afb :=_ccg (_dbeg ,_cce ,-_cca ._eeg ._gccg ,_dbeg ,_cce ,_cca ._eeg ._gccg );
if _cca ._abd ==0{if _bbfa ==0{return _g .Transparent ;};_eded :=0.5*_afb /_bbfa ;if _eded *_cca ._fgb ._gccg >=_cca ._dffe {return _fgcd (_eded ,_cca ._fdaa );};return _g .Transparent ;};_ccfc :=_ccg (_bbfa ,_cca ._abd ,0,_bbfa ,-_afb ,0);if _ccfc >=0{_bge :=_f .Sqrt (_ccfc );
_fgd :=(_bbfa +_bge )*_cca ._dbg ;_gca :=(_bbfa -_bge )*_cca ._dbg ;if _fgd *_cca ._fgb ._gccg >=_cca ._dffe {return _fgcd (_fgd ,_cca ._fdaa );}else if _gca *_cca ._fgb ._gccg >=_cca ._dffe {return _fgcd (_gca ,_cca ._fdaa );};};return _g .Transparent ;
};func _ggg (_ddcc float64 )_d .Int26_6 {return _d .Int26_6 (_ddcc *64)};func (_ebf *Context )AsMask ()*_ee .Alpha {_gdbe :=_ee .NewAlpha (_ebf ._ggbba .Bounds ());_ca .Draw (_gdbe ,_ebf ._ggbba .Bounds (),_ebf ._ggbba ,_ee .Point {},_ca .Src );return _gdbe ;
};func _fgfa (_ded [][]_gg .Point ,_bef []float64 ,_dbbb float64 )[][]_gg .Point {var _bga [][]_gg .Point ;if len (_bef )==0{return _ded ;};if len (_bef )==1{_bef =append (_bef ,_bef [0]);};for _ ,_dfccb :=range _ded {if len (_dfccb )< 2{continue ;};_dbd :=_dfccb [0];
_efed :=1;_abfc :=0;_eafa :=0.0;if _dbbb !=0{var _abb float64 ;for _ ,_gde :=range _bef {_abb +=_gde ;};_dbbb =_f .Mod (_dbbb ,_abb );if _dbbb < 0{_dbbb +=_abb ;};for _abc ,_cbgb :=range _bef {_dbbb -=_cbgb ;if _dbbb < 0{_abfc =_abc ;_eafa =_cbgb +_dbbb ;
break ;};};};var _fbga []_gg .Point ;_fbga =append (_fbga ,_dbd );for _efed < len (_dfccb ){_aaa :=_bef [_abfc ];_ddg :=_dfccb [_efed ];_age :=_dbd .Distance (_ddg );_fgfd :=_aaa -_eafa ;if _age > _fgfd {_ddc :=_fgfd /_age ;_ead :=_dbd .Interpolate (_ddg ,_ddc );
_fbga =append (_fbga ,_ead );if _abfc %2==0&&len (_fbga )> 1{_bga =append (_bga ,_fbga );};_fbga =nil ;_fbga =append (_fbga ,_ead );_eafa =0;_dbd =_ead ;_abfc =(_abfc +1)%len (_bef );}else {_fbga =append (_fbga ,_ddg );_dbd =_ddg ;_eafa +=_age ;_efed ++;
};};if _abfc %2==0&&len (_fbga )> 1{_bga =append (_bga ,_fbga );};};return _bga ;};func (_bbb *Context )SetRGBA (r ,g ,b ,a float64 ){_bbb ._caa =_g .NRGBA {uint8 (r *255),uint8 (g *255),uint8 (b *255),uint8 (a *255)};_bbb .setFillAndStrokeColor (_bbb ._caa );
};func (_ecdg stops )Less (i ,j int )bool {return _ecdg [i ]._fgef < _ecdg [j ]._fgef };func (_adg *Context )FillPattern ()_cff .Pattern {return _adg ._dga };func (_cfe *Context )SetMask (mask *_ee .Alpha )error {if mask .Bounds ().Size ()!=_cfe ._ggbba .Bounds ().Size (){return _ag .New ("\u006d\u0061\u0073\u006b\u0020\u0073i\u007a\u0065\u0020\u006d\u0075\u0073\u0074\u0020\u006d\u0061\u0074\u0063\u0068 \u0063\u006f\u006e\u0074\u0065\u0078\u0074 \u0073\u0069\u007a\u0065");
};_cfe ._abe =mask ;return nil ;};func _ccea (_aff float64 )float64 {return _aff *_f .Pi /180};func _ecag (_dbea _ee .Image )*_ee .RGBA {_efdgc :=_dbea .Bounds ();_ceae :=_ee .NewRGBA (_efdgc );_e .Draw (_ceae ,_efdgc ,_dbea ,_efdgc .Min ,_e .Src );return _ceae ;
};func (_acc *Context )drawString (_ede string ,_cfdf _ad .Face ,_gaf ,_aca float64 ){_ffb :=&_ad .Drawer {Src :_ee .NewUniform (_acc ._caa ),Face :_cfdf ,Dot :_afab (_gg .NewPoint (_gaf ,_aca ))};_cbbg :=rune (-1);for _ ,_dcb :=range _ede {if _cbbg >=0{_ffb .Dot .X +=_ffb .Face .Kern (_cbbg ,_dcb );
};_bcc ,_gab ,_gdd ,_fcag ,_ffa :=_ffb .Face .Glyph (_ffb .Dot ,_dcb );if !_ffa {continue ;};_dbb :=_bcc .Sub (_bcc .Min );_gffa :=_ee .NewRGBA (_dbb );_ca .DrawMask (_gffa ,_dbb ,_ffb .Src ,_ee .Point {},_gab ,_gdd ,_ca .Over );var _cef *_ca .Options ;
if _acc ._abe !=nil {_cef =&_ca .Options {DstMask :_acc ._abe ,DstMaskP :_ee .Point {}};};_accd :=_acc ._ff .Clone ().Translate (float64 (_bcc .Min .X ),float64 (_bcc .Min .Y ));_cdd :=_fg .Aff3 {_accd [0],_accd [3],_accd [6],_accd [1],_accd [4],_accd [7]};
_ca .BiLinear .Transform (_acc ._ggbba ,_cdd ,_gffa ,_dbb ,_ca .Over ,_cef );_ffb .Dot .X +=_fcag ;_cbbg =_dcb ;};};func (_caaf *Context )DrawString (s string ,face _ad .Face ,x ,y float64 ){_caaf .DrawStringAnchored (s ,face ,x ,y ,0,0);};func (_fca *Context )DrawEllipse (x ,y ,rx ,ry float64 ){_fca .NewSubPath ();
_fca .DrawEllipticalArc (x ,y ,rx ,ry ,0,2*_f .Pi );_fca .ClosePath ();};func (_cg *Context )TextState ()*_cff .TextState {return &_cg ._egc };func (_fea *Context )InvertMask (){if _fea ._abe ==nil {_fea ._abe =_ee .NewAlpha (_fea ._ggbba .Bounds ());}else {for _cdgc ,_dfac :=range _fea ._abe .Pix {_fea ._abe .Pix [_cdgc ]=255-_dfac ;
};};};func (_gdb *Context )StrokePattern ()_cff .Pattern {return _gdb ._dgb };func (_bede stops )Swap (i ,j int ){_bede [i ],_bede [j ]=_bede [j ],_bede [i ]};func (_fae *Context )QuadraticTo (x1 ,y1 ,x2 ,y2 float64 ){if !_fae ._cda {_fae .MoveTo (x1 ,y1 );
};x1 ,y1 =_fae .Transform (x1 ,y1 );x2 ,y2 =_fae .Transform (x2 ,y2 );_bbc :=_gg .NewPoint (x1 ,y1 );_cbbe :=_gg .NewPoint (x2 ,y2 );_caag :=_afab (_bbc );_ccfd :=_afab (_cbbe );_fae ._fbbb .Add2 (_caag ,_ccfd );_fae ._bfe .Add2 (_caag ,_ccfd );_fae ._cfb =_cbbe ;
};func (_afdf *Context )SetMatrix (m _gg .Matrix ){_afdf ._ff =m };func (_gbad *Context )DrawArc (x ,y ,r ,angle1 ,angle2 float64 ){_gbad .DrawEllipticalArc (x ,y ,r ,r ,angle1 ,angle2 );};func (_cbb *Context )SetLineCap (lineCap _cff .LineCap ){_cbb ._fddd =lineCap };
func (_gag *Context )Clip (){_gag .ClipPreserve ();_gag .ClearPath ()};type circle struct{_fgc ,_gcb ,_gccg float64 };func (_fbgd *Context )StrokePreserve (){var _bbg _gf .Painter ;if _fbgd ._abe ==nil {if _ddb ,_cdce :=_fbgd ._dgb .(*solidPattern );_cdce {_dgba :=_gf .NewRGBAPainter (_fbgd ._ggbba );
_dgba .SetColor (_ddb ._adb );_bbg =_dgba ;};};if _bbg ==nil {_bbg =_afgb (_fbgd ._ggbba ,_fbgd ._abe ,_fbgd ._dgb );};_fbgd .stroke (_bbg );};func (_aef *Context )SetLineWidth (lineWidth float64 ){_aef ._ef =lineWidth };func (_faea *Context )FillPreserve (){var _gcc _gf .Painter ;
if _faea ._abe ==nil {if _bad ,_bcg :=_faea ._dga .(*solidPattern );_bcg {_dfdb :=_gf .NewRGBAPainter (_faea ._ggbba );_dfdb .SetColor (_bad ._adb );_gcc =_dfdb ;};};if _gcc ==nil {_gcc =_afgb (_faea ._ggbba ,_faea ._abe ,_faea ._dga );};_faea .fill (_gcc );
};func (_fbg *Context )SetRGB (r ,g ,b float64 ){_fbg .SetRGBA (r ,g ,b ,1)};type patternPainter struct{_eacg *_ee .RGBA ;_gefd *_ee .Alpha ;_fgeg _cff .Pattern ;};